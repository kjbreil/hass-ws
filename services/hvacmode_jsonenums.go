// Code generated by jsonenums -type=HvacMode; DO NOT EDIT.

package services

import (
	"fmt"
	"github.com/goccy/go-json"
)

var (
	_HvacModeNameToValue = map[string]HvacMode{
		"HvacModeauto":      HvacModeauto,
		"HvacModecool":      HvacModecool,
		"HvacModedry":       HvacModedry,
		"HvacModefan_only":  HvacModefan_only,
		"HvacModeheat":      HvacModeheat,
		"HvacModeheat_cool": HvacModeheat_cool,
		"HvacModeoff":       HvacModeoff,
	}

	_HvacModeValueToName = map[HvacMode]string{
		HvacModeauto:      "HvacModeauto",
		HvacModecool:      "HvacModecool",
		HvacModedry:       "HvacModedry",
		HvacModefan_only:  "HvacModefan_only",
		HvacModeheat:      "HvacModeheat",
		HvacModeheat_cool: "HvacModeheat_cool",
		HvacModeoff:       "HvacModeoff",
	}
)

func init() {
	var v HvacMode
	if _, ok := interface{}(v).(fmt.Stringer); ok {
		_HvacModeNameToValue = map[string]HvacMode{
			interface{}(HvacModeauto).(fmt.Stringer).String():      HvacModeauto,
			interface{}(HvacModecool).(fmt.Stringer).String():      HvacModecool,
			interface{}(HvacModedry).(fmt.Stringer).String():       HvacModedry,
			interface{}(HvacModefan_only).(fmt.Stringer).String():  HvacModefan_only,
			interface{}(HvacModeheat).(fmt.Stringer).String():      HvacModeheat,
			interface{}(HvacModeheat_cool).(fmt.Stringer).String(): HvacModeheat_cool,
			interface{}(HvacModeoff).(fmt.Stringer).String():       HvacModeoff,
		}
	}
}

// MarshalJSON is generated so HvacMode satisfies json.Marshaler.
func (r HvacMode) MarshalJSON() ([]byte, error) {
	if s, ok := interface{}(r).(fmt.Stringer); ok {
		return json.Marshal(s.String())
	}
	s, ok := _HvacModeValueToName[r]
	if !ok {
		return nil, fmt.Errorf("invalid HvacMode: %d", r)
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so HvacMode satisfies json.Unmarshaler.
func (r *HvacMode) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("HvacMode should be a string, got %s", data)
	}
	v, ok := _HvacModeNameToValue[s]
	if !ok {
		return fmt.Errorf("invalid HvacMode %q", s)
	}
	*r = v
	return nil
}
